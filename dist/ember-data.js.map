{"version":3,"file":"ember-data.js","sources":["../src/ember-data.js"],"sourcesContent":["import { Model, belongsTo, hasMany } from 'miragejs';\nimport EmberDataSerializer from './ember-data-serializer';\nimport { entityName } from './create-config';\n\nconst MirageModelCache = {};\nconst MirageSerializerCache = {};\n\nexport function importEmberDataModels(store, importMap = {}) {\n  return Object.keys(importMap).reduce((acc, path) => {\n    const configName = entityName(path);\n    acc[configName] = createMirageModel(store, configName);\n    return acc;\n  }, {});\n}\n\n// TODO: Replace with original `applyEmberDataSerializers` function\nexport function importEmberDataSerializers(\n  mirageSerializers,\n  emberDataConfig = {},\n) {\n  const { store, serializers = {} } = emberDataConfig;\n  return Object.keys(serializers).reduce((acc, path) => {\n    const configName = entityName(path);\n    acc[configName] = createMirageSerializer(\n      store,\n      mirageSerializers,\n      configName,\n    );\n    return acc;\n  }, {});\n}\n\nfunction createMirageModel(store, modelName) {\n  if (MirageModelCache[modelName]) {\n    return MirageModelCache[modelName];\n  }\n\n  const model = store.modelFor(modelName);\n  const relationships = {};\n\n  model.eachRelationship((name, r) => {\n    if (r.kind === 'belongsTo') {\n      relationships[name] = belongsTo(r.type, r.options);\n    } else if (r.kind === 'hasMany') {\n      relationships[name] = hasMany(r.type, r.options);\n    }\n  });\n  const mirageModel = Model.extend(relationships);\n\n  MirageModelCache[modelName] = mirageModel;\n\n  return mirageModel;\n}\n\nexport function createMirageSerializer(store, serializers, serializerName) {\n  if (MirageSerializerCache[serializerName]) {\n    return MirageSerializerCache[serializerName];\n  }\n\n  let mirageSerializer =\n    serializers[serializerName] ||\n    serializers.application ||\n    EmberDataSerializer;\n\n  let dsSerializer = store.serializerFor(serializerName);\n\n  let transforms;\n  let primaryKey = dsSerializer.primaryKey;\n  let attrs = dsSerializer.attrs;\n  if (primaryKey || attrs) {\n    if (attrs) {\n      let serializer = mirageSerializer.create\n        ? mirageSerializer.create()\n        : new mirageSerializer();\n\n      transforms = serializer.transforms || {};\n\n      Object.keys(attrs).forEach((key) => {\n        let transform = attrs[key];\n        let serializerTransform = serializer.transforms\n          ? serializer.transforms[key]\n          : {};\n        let resolvedTransform =\n          typeof attrs[key] === 'string'\n            ? {\n                key: attrs[key],\n              }\n            : {\n                key: attrs[key].key,\n              };\n\n        if (transform.serialize !== undefined) {\n          resolvedTransform.deserialize = transform.serialize;\n        }\n\n        if (transform.deserialize !== undefined) {\n          resolvedTransform.serialize = transform.deserialize;\n        }\n\n        transforms[key] = Object.assign(resolvedTransform, serializerTransform);\n      });\n    }\n\n    mirageSerializer = mirageSerializer.extend({\n      primaryKey,\n      transforms,\n    });\n  }\n\n  MirageSerializerCache[serializerName] = mirageSerializer;\n\n  return mirageSerializer;\n}\n"],"names":["MirageModelCache","MirageSerializerCache","importEmberDataModels","store","importMap","Object","keys","reduce","acc","path","configName","entityName","createMirageModel","importEmberDataSerializers","mirageSerializers","emberDataConfig","serializers","createMirageSerializer","modelName","model","modelFor","relationships","eachRelationship","name","r","kind","belongsTo","type","options","hasMany","mirageModel","Model","extend","serializerName","mirageSerializer","application","EmberDataSerializer","dsSerializer","serializerFor","transforms","primaryKey","attrs","serializer","create","forEach","key","transform","serializerTransform","resolvedTransform","serialize","undefined","deserialize","assign"],"mappings":"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"}