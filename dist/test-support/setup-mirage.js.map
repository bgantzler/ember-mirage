{"version":3,"file":"setup-mirage.js","sources":["../../src/test-support/setup-mirage.js"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { settled } from '@ember/test-helpers';\nimport { createServer as _createServer } from 'miragejs';\nimport { dependencySatisfies } from '@embroider/macros';\n\nlet qunitSetUp = false;\n\nexport function setupMirage(hooks = self, { createServer, config }) {\n  assert(\n    `Unexpected arity for setupMirage. Expected 2 (hooks, { createServer, or config })`,\n    arguments.length <= 2 && arguments.length > 0,\n  );\n  assert(\n    `Second argument to setupMirage must be an object and not null`,\n    typeof arguments[1] === 'object' && arguments[1] !== null,\n  );\n  assert(\n    `Second argument to setupMirage must on or both of createServer and/or config. You passed ${Object.keys(arguments[1]).join(', ')}`,\n    'createServer' in arguments[1] || 'config' in arguments[1],\n  );\n\n  createServer ??= _createServer;\n\n  hooks.beforeEach(async function () {\n    if (!this.owner) {\n      throw new Error(\n        'You must call one of the ember-qunit setupTest(),' +\n          ' setupRenderingTest() or setupApplicationTest() methods before' +\n          ' calling setupMirage()',\n      );\n    }\n\n    this.server = await createServer(config ?? {});\n\n    // This only works after the server was created.\n    if (\n      typeof location !== 'undefined' &&\n      location.search.indexOf('mirageLogging') !== -1\n    ) {\n      this.server.logging = true;\n    }\n  });\n\n  hooks.afterEach(function () {\n    return settled().then(() => {\n      if (this.server) {\n        this.server.shutdown();\n        delete this.server;\n      }\n    });\n  });\n\n  // the qunitSetUp guard is to prevent this from pushing multiple copies of the same config option\n  if (dependencySatisfies('ember-qunit', '*') && !qunitSetUp) {\n    window.QUnit.config.urlConfig.push({\n      id: 'mirageLogging',\n      label: 'Mirage logging',\n    });\n    qunitSetUp = true;\n  }\n}\n"],"names":["qunitSetUp","setupMirage","hooks","self","createServer","config","assert","arguments","length","Object","keys","join","_createServer","beforeEach","owner","Error","server","location","search","indexOf","logging","afterEach","settled","then","shutdown","dependencySatisfies","window","QUnit","urlConfig","push","id","label"],"mappings":";;;;;AAKA,IAAIA,UAAU,GAAG,KAAK;AAEf,SAASC,WAAWA,CAACC,KAAK,GAAGC,IAAI,EAAE;gBAAEC,cAAY;AAAEC,EAAAA;AAAO,CAAC,EAAE;AAClEC,EAAAA,MAAM,CACJ,CAAA,iFAAA,CAAmF,EACnFC,SAAS,CAACC,MAAM,IAAI,CAAC,IAAID,SAAS,CAACC,MAAM,GAAG,CAC9C,CAAC;AACDF,EAAAA,MAAM,CACJ,CAA+D,6DAAA,CAAA,EAC/D,OAAOC,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAIA,SAAS,CAAC,CAAC,CAAC,KAAK,IACvD,CAAC;AACDD,EAAAA,MAAM,CACJ,CAAA,yFAAA,EAA4FG,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE,EAClI,cAAc,IAAIJ,SAAS,CAAC,CAAC,CAAC,IAAI,QAAQ,IAAIA,SAAS,CAAC,CAAC,CAC3D,CAAC;AAEDH,EAAAA,cAAY,KAAKQ,YAAa;EAE9BV,KAAK,CAACW,UAAU,CAAC,kBAAkB;AACjC,IAAA,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACf,MAAM,IAAIC,KAAK,CACb,mDAAmD,GACjD,gEAAgE,GAChE,wBACJ,CAAC;AACH;IAEA,IAAI,CAACC,MAAM,GAAG,MAAMZ,cAAY,CAACC,MAAM,IAAI,EAAE,CAAC;;AAE9C;AACA,IAAA,IACE,OAAOY,QAAQ,KAAK,WAAW,IAC/BA,QAAQ,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAC/C;AACA,MAAA,IAAI,CAACH,MAAM,CAACI,OAAO,GAAG,IAAI;AAC5B;AACF,GAAC,CAAC;EAEFlB,KAAK,CAACmB,SAAS,CAAC,YAAY;AAC1B,IAAA,OAAOC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAM;MAC1B,IAAI,IAAI,CAACP,MAAM,EAAE;AACf,QAAA,IAAI,CAACA,MAAM,CAACQ,QAAQ,EAAE;QACtB,OAAO,IAAI,CAACR,MAAM;AACpB;AACF,KAAC,CAAC;AACJ,GAAC,CAAC;;AAEF;EACA,IAAIS,mBAAmB,CAAC,aAAa,EAAE,GAAG,CAAC,IAAI,CAACzB,UAAU,EAAE;IAC1D0B,MAAM,CAACC,KAAK,CAACtB,MAAM,CAACuB,SAAS,CAACC,IAAI,CAAC;AACjCC,MAAAA,EAAE,EAAE,eAAe;AACnBC,MAAAA,KAAK,EAAE;AACT,KAAC,CAAC;AACF/B,IAAAA,UAAU,GAAG,IAAI;AACnB;AACF;;;;"}